地面を走れるようにする

必要なこと
　・機体は浮いているためオブジェクトにRigidBodyを付けただけでは狙った仕様を作り出せない
　・RigidBodyを使用せず地面を認識して処理を切り替える　
　→しかし地面を認識するだけではそれに対して合わせてくれたりはしないので地面を走れるように補正する処理も作成する

実装(地面判定・位置)

　接地判定
　　・地面を認識する機能はRayCastを使用して作成した。
　　・自分の直下に向かって自分の身長分のRayを投射し、それが地面に当たったら接地の判定変数をONにする
　　→しかしこれでは判定をとっただけなので接地しているときに地面に対しての補正を行う

　接地処理
　　・地面についている場合はプレイヤーの自然落下を停止させる
　　→この処理に際してプレイヤーが自然落下する際に地面の判定をすり抜け、奈落に落下する現象が発生した

　埋まり防止
　・上記の地形埋まり対策に、接地しているときに自分の位置-地面の位置がプレイヤーの身長より低い場合positionを地面の上に
　戻す処理を追加した。
　→この方法なら補正を行い、ほとんどの地形埋まりをなくすことができたがプレイヤーキャラがブレーキをかけ、落下速度が上昇した際に上下にガクガクするように
　なってしまった。
　・この問題を解決するためにLogなどを使用し、判定に使用されてる数値がどうなっているかを観察した結果、float型の微細な誤差の影響もあってか、
　自然落下で地形に埋まる
　↓
　補正される
　↓
　一瞬空中にいる判定になる
　↓
　自然落下する
　↓
　補正される
　というようなループに入りガタガタが発生していることが判明した。
　
　ガタガタの解決
　・この問題の原因として一番考えられるのは、埋まりの補正を行う処理の条件式であるif(transform.position-地面の高さ<自身の身長)という条件を満たしすぎてしまう
　ということにある。
　・そこで、人の目にわからない程度の埋まりを許容するような条件式に変更したところ、ガタガタは改善され、画面酔いしにくくなった。

実装(地形に合わせた回転)
　
　接地したら回転
　・RigidBodyを使っている間はあまり深く意識しなかったが、接地した機体は地面に合わせて回転を行うため、その処理をしなければならない。
　・回転を行わなかった場合、接地判定をとって地面に立っていたとしても坂道などがある場合その坂を上ろうとせず最終的にしたに伸びる接地判定のRayCastが地面に接しなくなり
　　奈落へ落下する
　
　考え方
　・床に対してそれを上るような形の回転を機体に対して加える
　＝床の面に対して機体のTransForm.upが垂直な状態
　と言い換えられる
　・RayCastで取得できるHit.nomalを利用する
　
　参考にした本
　https://www.amazon.co.jp/Unity%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8B-%E3%82%B2%E3%83%BC%E3%83%A0%E6%95%B0%E5%AD%A6-%E5%8A%A0%E8%97%A4-%E6%BD%94/dp/4798154784